@model BusBoard.Web.ViewModels.BusInfo
@{
	ViewBag.Title = "Bus Information";
}

<h2>BusInfo</h2>

<div class="row">
	@if (Model.ErrorMessage == null)
	{
		<h3>
			Bus arrivals near @Model.PostCode
		</h3>
		<div id="busTimes">
			@foreach (var busPrediction in Model.BusPredictions)
			{
				<div class="busBox">
					<div class="busUnit" style="filter: hue-rotate(@busPrediction.GetHue());">
						<img class="flagIcon" src="~/Content/flag-variant.svg" />
						<img class="busIcon" src="~/Content/bus-side.svg" style="margin-left: @(Math.Min(12, busPrediction.timeToStation/60))em" />
						<div class="busShadow"></div>
					</div>
					<div class="busTime" style="border: 1px solid hsl(@busPrediction.GetHue(), 70%, 50%); color: hsl(@busPrediction.GetHue(), 70%, 50%)">
						<p class="station">@busPrediction.stationName</p>
						<p class="line">@busPrediction.lineName</p>
						<p class="time">@busPrediction.GetNiceTime()</p>
					</div>
				</div>
			}
		</div>

		<script language="javascript">
			setTimeout("location.reload(true);", 30000);
		</script>


		<div id="map" class="mcmapface"></div>
		<script>
			// Initialize and add the map
			function initMap() {
				var map = new google.maps.Map(
					document.getElementById('map'), { zoom: 17, center: { lat: @Model.StopPoints[0].lat, lng: @Model.StopPoints[0].lon } });
				@foreach (var stopPoint in Model.StopPoints)
				{
					<text>
					new google.maps.Marker({ position: { lat: @stopPoint.lat, lng: @stopPoint.lon }, map: map });
					</text>
				}
			}
		</script>
		<script async defer
				src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDk-TwwSAWZWW3XAHrNs5Kx4IHUIQY5kJk&callback=initMap">
		</script>


}
		else if (Model.PostCode.IsEmpty())
		{
	<h1>An error has occurred.</h1>
	<p>No postcode was entered. Please enter a valid postcode.</p>
		}
		else
		{
	<h1>An error has occurred.</h1>
	<p>The postcode entered was <b>@Model.PostCode</b>.</p>
	<p>@Model.ErrorMessage</p>
		}
</div>
